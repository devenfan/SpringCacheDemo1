<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd">


    <!-- ======================================================================================= -->

    <context:property-placeholder location="classpath*:*.properties" />

    <!-- 开启spring 组件注解 -->
    <context:component-scan base-package="net.sh.spring.demo" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
    </context:component-scan>


    <!-- ======================================================================================= -->

    <!-- 开启spring 缓存注解 -->
    <cache:annotation-driven cache-manager="cacheManager"  />

    <!-- 没必要用自定义的KeyGenerator -->
    <!--<cache:annotation-driven cache-manager="cacheManager" key-generator="cacheKeyGenerator" />-->

    <!-- ======================================================================================= -->

    <!-- redies配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="minIdle" value="${redis.minIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <!-- redies连接配置 -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>

    <!-- 连接池配置 -->
    <bean id="redisPool" class="redis.clients.jedis.JedisPool">
        <!-- 连接池配置 -->
        <constructor-arg index="0">
            <ref bean="poolConfig" />
        </constructor-arg>
        <constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>
        <constructor-arg index="2" value="${redis.port}" type="int" />
    </bean>

    <!-- Redis Template -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>
    </bean>

    <!-- ======================================================================================= -->

    <!-- RedisCacheManager -->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0">
            <ref bean="redisTemplate" />
        </constructor-arg>
        <!-- 重要：开启前缀功能，与cacheNames相关，分布式缓存最好使用，可根据前缀隔离缓存 -->
        <property name="usePrefix" value="true" />
    </bean>

    <!-- CacheKey生成策略配置（最好不使用，容易被自定义key覆盖） -->
    <bean id="cacheKeyGenerator" class="net.sh.spring.demo.cache.CacheKeyGenerator">
        <property name="regionName" value="myCacheRegion" />
        <property name="debug" value="true" />
    </bean>


    <!-- generic cache manager
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">

        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                      p:name="default"/>

                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                      p:name="accountCache"/>
            </set>
        </property>
    </bean>
    -->


    <!-- ======================================================================================= -->


</beans>
